BAGEL -- Freshly leavened quantum chemistry       by NU Theory

In order to compile this package:
// first do the standard automake sequence

glibtoolize    (in Linux, "libtoolize" instead)
aclocal
autoconf
autoheader
automake -a

// then create an object directory where you compile the program
mkdir obj
cd obj

// then configure with C++11 standard (-std=c++11 for gcc 4.7, -std=c++0x for gcc 4.6 and below;
// most likely very old compilers won't work).

// Also, we need to and an appropriate flag to link
// "-lboost_regex"
// Blame libstdc++ that does not have complete regex yet.

// BLAS and LAPACK are required (see below)

// Other than that, use any options as you like.
// Note that -O3 optimization is fine, but it will take a lot till it compiles everything.

../configure 'CXXFLAGS=-std=c++11' 'LDFLAGS=-L/opt/local/lib -lblas -llapack'

// ** important **
// For developers: please make sure that your code can be compiled with

../configure 'CXXFLAGS=-std=c++11 -Wall -Wno-sign-compare -Wno-unused -Werror -O0 -g' 'LDFLAGS=-L/opt/local/lib -lblas -llapack' 'FCFLAGS=-O0 -g' 'FFLAGS=-O0 -g'

// If you have MKL and MPI, the following would be useful. Furthermore, you could use -mavx on Linux (instead of -msse4.2). Note parallel version is experimental.

../configure 'CXXFLAGS=-std=c++11 -Wall -Wno-sign-compare -Wno-unused -Werror -O0 -g' 'FCFLAGS=-O0 -g' 'FFLAGS=-O0 -g' '--prefix=/usr/local/BAGEL_mpi' '--enable-mpi' '--enable-mkl' '--with-include=-I/usr/local/include -I/opt/intel/composerxe/mkl/include'

// make
make -j4

// This step takes a lot (since it compiles something like F12 integrals, derivative integrals, ...)
// it often fails to link at the very end. Let me know if you see it with an error message.

// move to the directory where an executable is located
cd src

// the name is still PolyR12 (it used to be a periodic R12/F12 code long ago.)
ln -s ../../src/basis basis

// run
./BAGEL ../../test/benzene_svp_mp2.in
